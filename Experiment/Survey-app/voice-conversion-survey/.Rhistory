path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
list_of_reals <- list.files(paste(model, task, subtask))
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2)
print(fakes)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
list_of_reals <- list.files(paste(model, task, subtask))
print(list_of_reals)
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2)
print(fakes)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
list_of_reals <- list.files(paste("www", model, task, subtask, sep = "/"))
print(list_of_reals)
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2)
print(fakes)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2)
print(names)
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 2)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 232)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 233)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2)
print(fakes)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
print(list_of_reals1)
print(list_of_reals2)
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 233)
return(c(path_to_fake1, path_to_real, path_to_fake2))
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
print(fakes)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, person2, sep= "/")
path_to_real <- paste("persons", name, person1[2], sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 233)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
print(fakes)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, person2, sep= "/")
path_to_real <- paste(model, task, subtask, person1[2], sep = "/" )
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 233)
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 23)
runApp()
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
real <- sample(list_of_reals, 1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, person2, sep= "/")
path_to_real <- paste(model, task, subtask, person1[2], sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
_wavs_experiment
get_wavs_experiment("Baseline", "Baseline", "Male_English", "similarity", 23)
source("Combination.R")
runApp()
source("Combination.R")
runApp()
get_wavs_experiment("AutoVC", "English_English", "Male_Male", "real_fake", 2)
get_wavs_experiment("AutoVC", "English_English", "Male_Male", "real_fake", 2)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
name <- sample(list_of_reals, 1)
real<-sample(list.files(paste("Baseline", "Baseline", baseline_category, name, sep = "/")),1)
print(name)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, name, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
else if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, person2, sep= "/")
path_to_real <- paste(model, task, subtask, person1[2], sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
get_wavs_experiment("AutoVC", "English_English", "Male_Male", "real_fake", 2)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
name <- sample(list_of_reals, 1)
print(name)
real<-sample(list.files(paste("Baseline", "Baseline", baseline_category, name, sep = "/")),1)
print(name)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, name, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
else if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, person2, sep= "/")
path_to_real <- paste(model, task, subtask, person1[2], sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
get_wavs_experiment("AutoVC", "English_English", "Male_Male", "real_fake", 2)
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
name <- sample(list_of_reals, 1)
print(name)
real<-sample(list.files(paste("www", "Baseline", "Baseline", baseline_category, name, sep = "/")),1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, name, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
else if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, person2, sep= "/")
path_to_real <- paste(model, task, subtask, person1[2], sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
get_wavs_experiment("AutoVC", "English_English", "Male_Male", "real_fake", 2)
source("Combination.R")
runApp()
source("Combination.R")
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
name <- sample(list_of_reals, 1)
print(name)
real<-sample(list.files(paste("www", "Baseline", "Baseline", baseline_category, name, sep = "/")),1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, name, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
else if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, names[1], person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, names[2], person2, sep= "/")
path_to_real <- paste(model, task, subtask, person1[2], sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
source("Combination.R")
runApp()
runApp()
get_wavs_experiment <- function(model, task, subtask, q, seed){
set.seed(seed)
if (q == "real_fake"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fake <- sample(list_of_fakes, 1, F)
t <- strsplit(task[1], "_")[[1]]
s <- strsplit(subtask[1], "_")[[1]]
baseline_category <- paste(s[2],t[2], sep = "_")
list_of_reals <- list.files(sprintf('www/Baseline/Baseline/%s', baseline_category))
name <- sample(list_of_reals, 1)
print(name)
real<-sample(list.files(paste("www", "Baseline", "Baseline", baseline_category, name, sep = "/")),1)
path_to_fake <- paste(model, task, subtask, fake, sep= "/")
path_to_real <- paste("Baseline", "Baseline", baseline_category, name, real, sep = "/")
return(c(path_to_real, path_to_fake))
}
else if (q == "similarity" & model != "Baseline"){
list_of_fakes <- list.files(sprintf("www/%s/%s/%s", model, task, subtask))
fakes <- sample(list_of_fakes, 2, F)
split <- strsplit(str_remove(fakes[1], ".wav"), "_")[[1]]
name <- split[length(split)]
list_of_reals <- list.files(sprintf("www/persons/%s", name))
real <- sample(list_of_reals, 1)
path_to_fake1 <- paste(model, task, subtask, fakes[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, fakes[2], sep= "/")
path_to_real <- paste("persons", name, real, sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
else if  (q == "similarity" & model == "Baseline"){
names <- sample(list.files(paste("www", model, task, subtask, sep = "/")),2, replace = F)
list_of_reals1 <- list.files(paste("www", model, task, subtask, names[1], sep = "/"))
list_of_reals2 <- list.files(paste("www", model, task, subtask, names[2], sep = "/"))
person1 <- sample(list_of_reals1, 2, F)
person2 <- sample(list_of_reals2, 1, F)
path_to_fake1 <- paste(model, task, subtask, names[1], person1[1], sep= "/")
path_to_fake2 <- paste(model, task, subtask, names[2], person2, sep= "/")
path_to_real <- paste(model, task, subtask, names[1], person1[2], sep = "/" )
print(c(path_to_fake1, path_to_real, path_to_fake2))
return(c(path_to_fake1, path_to_real, path_to_fake2))
}
}
source("Combination.R")
runApp()
runApp()
runApp()
runApp()
